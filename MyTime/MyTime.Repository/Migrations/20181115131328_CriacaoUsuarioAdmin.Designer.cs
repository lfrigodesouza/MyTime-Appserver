// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyTime.Domain.Enums;
using MyTime.Repository;

namespace MyTime.Repository.Migrations
{
    [DbContext(typeof(MyTimeDbContext))]
    [Migration("20181115131328_CriacaoUsuarioAdmin")]
    partial class CriacaoUsuarioAdmin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MyTime.Domain.TBLAppointment", b =>
                {
                    b.Property<int>("IdAppointment")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DtEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("NOW()");

                    b.Property<int>("FlgDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("IdTask");

                    b.HasKey("IdAppointment");

                    b.HasIndex("IdTask");

                    b.ToTable("TBLAppointment");
                });

            modelBuilder.Entity("MyTime.Domain.TBLTask", b =>
                {
                    b.Property<int>("IdTask")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("DtCreation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateTime?>("DtFinished")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtStarted")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUser");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TaskStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("TotalDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal")
                        .HasDefaultValue(0m);

                    b.HasKey("IdTask");

                    b.HasIndex("IdUser");

                    b.ToTable("TBLTask");
                });

            modelBuilder.Entity("MyTime.Domain.TBLUser", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("FlgEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<int>("UserType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.HasKey("IdUser");

                    b.ToTable("TBLUser");
                });

            modelBuilder.Entity("MyTime.Domain.TBLAppointment", b =>
                {
                    b.HasOne("MyTime.Domain.TBLTask", "TBLTask")
                        .WithMany("TBLAppointments")
                        .HasForeignKey("IdTask")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyTime.Domain.TBLTask", b =>
                {
                    b.HasOne("MyTime.Domain.TBLUser", "TBLUser")
                        .WithMany("TBLTasks")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
